KNN model – project report

The project includes 2 models which are self implemented KNN and a premade KNN model from sklearn library.

Analysis:

1. self implemented KNN:

Performance of self implementation
              precision    recall  f1-score   support

         0.0       0.54      0.44      0.48        16
         1.0       0.40      0.50      0.44        12

    accuracy                           0.46        28
   macro avg       0.47      0.47      0.46        28
weighted avg       0.48      0.46      0.47        28

Confusion Matrix:
[[7 9]
 [6 6]]

Accuracy rate of knn implementation:  0.46
error rate 0.5357142857142857


Based on the plot in jupyter note, we see that with a larger k, the error rate will be steadily reduced and improve the efficiency of the training model.

2. sklearn KNN:

Performance of sklearn
              precision    recall  f1-score   support

           0       0.55      0.38      0.44        16
           1       0.41      0.58      0.48        12

    accuracy                           0.46        28
   macro avg       0.48      0.48      0.46        28
weighted avg       0.49      0.46      0.46        28

Confusion Matrix:
[[ 6 10]
 [ 5  7]]

Accuracy rate of sklearn knn:  0.46
error rate 0.5357142857142857

Based on the plot in jupyter note , we see that with a larger k, the error rate will be steadily reduced and improve the efficiency of the training model. (similarly to the other model)

Comparison of performance between implemented-KNN and sklearn-KNN algorithm using train-test dataset split with the ratio of 80-20.

Based on the confusion matrix, we can see that both models produce the same performance with the error rate of 0.53. The error rate is not ideal since there is not enough data in this case.
